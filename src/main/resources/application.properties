server.port=8085

spring.messages.basename=lang.messages
spring.web.resources.static-locations=classpath:/spring-frontend/
spring.thymeleaf.prefix=classpath:/spring-frontend/

spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=exyst
spring.datasource.driver-class-name=org.postgresql.Driver
#spring.sql.init.data-locations=classpath:data.sql
#spring.sql.init.mode=always
#Комментарий по свойству: Notably, if we are using a non-embedded database, let's say MySQL or PostGreSQL, and want to initialize its schema, we'll have to set this property to always.

#При старте приложения сущности будут создаваться, а по завершению вся бд будет дропаться
spring.jpa.hibernate.ddl-auto=none
#Свойство, указывающее используемый jpa диалект
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
#Отображаем в консоли все SQL выполняющиеся операции
spring.jpa.show-sql=true 
spring.jpa.defer-datasource-initialization=false
#Комментарий по свойству: This will ensure, that after Hibernate schema creation is performed then additionally schema.sql is read for any additional schema changes and data.sql is executed to populate the database.

#Отсюда включаю liquibase
spring.liquibase.enabled=true
spring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml